[
  {
    "name": "exports.pushToFunctionBody",
    "filePath": "@twist/babel-plugin-transform/src/PathUtils.js",
    "lines": [
      {
        "lineNumber": 118,
        "line": "    /**"
      },
      {
        "lineNumber": 119,
        "line": "     * Push the given expression(s) to the start of the body of the given function. This handles arrow functions too"
      },
      {
        "lineNumber": 120,
        "line": "     * (it converts the arrow function body to a block with a return statement, if it's an expression)."
      },
      {
        "lineNumber": 121,
        "line": "     *"
      },
      {
        "lineNumber": 122,
        "line": "     * @param {Path} path"
      },
      {
        "lineNumber": 123,
        "line": "     * @return {Statement|Array.<Statement>} Statement(s) to push to the start of the function body."
      },
      {
        "lineNumber": 124,
        "line": "     */"
      },
      {
        "lineNumber": 125,
        "line": "    static pushToFunctionBody(path, expressions) {"
      }
    ],
    "codeParams": [
      "path",
      "expressions"
    ],
    "docParams": [
      "path"
    ]
  },
  {
    "name": "BaseLayoutComponent#layoutAttributes",
    "filePath": "@twist/virtual-scroller/src/layout/BaseLayoutComponent.jsx",
    "lines": [
      {
        "lineNumber": 69,
        "line": "    /**"
      },
      {
        "lineNumber": 70,
        "line": "     * Begin watching the specified observable attributes, triggering `setNeedsLayout()` when they change."
      },
      {
        "lineNumber": 71,
        "line": "     *"
      },
      {
        "lineNumber": 72,
        "line": "     * @param {...WatchFunction } funcs A function that references an observable, for passing to `.watch()`."
      },
      {
        "lineNumber": 73,
        "line": "     */"
      },
      {
        "lineNumber": 74,
        "line": "    layoutAttributes() {"
      }
    ],
    "codeParams": [],
    "docParams": [
      "funcs"
    ]
  }
]